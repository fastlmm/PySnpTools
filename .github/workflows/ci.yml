name: CI
on:
  push:
  schedule:
    - cron: '0 0 1 * *'
  pull_request:
  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # cmk, windows-2022, macos-13, macos-14]
        python-version: ["3.13"] # ["3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v3
    - name: Install Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Setup, Lint, and Test Python (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd pysnptools
        uvx ruff@0.7.1 check .
        uvx ruff@latest check . || echo "Ignoring warnings from the latest version of ruff"
        uv sync --extra dev
        source ../.venv/bin/activate
        pytest
        uv sync --all-extras
        source ../.venv/bin/activate
        pytest distreader/test_bgen2.py
        uv build
    - name: Setup, Lint, and Test Python (Windows)
      if: runner.os == 'Windows'
      run: |
        cd pysnptools
        uvx ruff@0.7.1 check .
        uvx ruff@latest check . || echo "Ignoring warnings from the latest version of ruff"
        uv sync --extra dev
        ../.venv/Scripts/activate
        pytest
        uv sync --all-extras
        ../.venv/Scripts/activate
        pytest distreader/test_bgen2.py
        uv build
  
    - name: Save SDist
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist/*.tar.gz
